@page "/Order/Display/{Id:int}"
@inject IFoodData foodData
@inject IOrderData orderData

<h3>Display</h3>
@if (order is null)
{
 <h4>Record Loading..</h4>   
}else
{
    <table class="table">
        <tbody>
            <tr>
                <td><strong>Order Name</strong></td>
                <td>@order.OrderName</td>
            </tr>
            <tr>
                <td><strong>Order Date</strong></td>
                <td>@order.OrderDate</td>
            </tr>
            <tr>
                <td><strong>Order Total</strong></td>
                <td>@String.Format("{0:C}",order.Total)</td>
            </tr>
            <tr>
                <td><strong>Item Ordered</strong></td>
                <td>@itemPurchased</td>
            </tr>
            <tr>
                <td><strong>Quantity</strong></td>
                <td>@order.Quantity</td>
            </tr>
            @* <tr>
                <td colspan="2">
                    <a asp-page="./Delete" asp-route-id="@Model.Order.Id" class="btn btn-danger">Delete Order</a>
                </td>
            </tr> *@
        </tbody>
    </table>

    <form method="post">
        @* <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="UpdateModel.Id" value="@Model.Order.Id" type="hidden"/>
        <div class="form-group">
            <label asp-for="UpdateModel.OrderName" class="control-label" style="font-weight: bold"                                                                                              ></label>
            <input asp-for="UpdateModel.OrderName" value="@Model.Order.OrderName" class="form-control"/>
            <span asp-validation-for="UpdateModel.OrderName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Update Order Name" class="btn btn-primary"/>    
        </div> *@
    </form>
}


@code {
    [Parameter]
    public int Id { get; set; }
    private OrderModel order;
    public string itemPurchased;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        order = orderData.GetOrderById(Id);

        if (order is not null)
        {
            itemPurchased = foodData.GetFoodById(order.FoodId)?.Title;
        }

    }

}
