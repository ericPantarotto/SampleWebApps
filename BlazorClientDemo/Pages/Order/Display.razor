@page "/Order/Display/{Id:int}"
@inject HttpClient Http
@inject NavigationManager navigationManager
<h3>Display</h3>

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <h4>System Error</h4>
    <p>@errorString</p>
}
else if (orderInfo.Order is null)
{
    <h4>Loading...</h4>
}
else
{
      <table class="table">
        <tbody>
            <tr>
                <td><strong>Order Name</strong></td>
                <td>@orderInfo.Order.OrderName</td>
            </tr>
            <tr>
                <td><strong>Order Date</strong></td>
                <td>@orderInfo.Order.OrderDate</td>
            </tr>
            <tr>
                <td><strong>Order Total</strong></td>
                <td>@String.Format("{0:C}",orderInfo.Order.Total)</td>
            </tr>
            <tr>
                <td><strong>Item Ordered</strong></td>
                <td>@orderInfo.ItemPurchased</td>
            </tr>
            <tr>
                <td><strong>Quantity</strong></td>
                <td>@orderInfo.Order.Quantity</td>
            </tr>
            @* <tr>
                <td colspan="2">
                    @if (confirmDelete)
                    {
                        <button class="btn btn-outline-danger" @onclick="HandleDeleteRecord">
                            Confirm Order
                        </button>
                        <button class="btn btn-secondary" @onclick="(() => confirmDelete = false)">
                            Cancel
                        </button>
                    }else
                    {
                        <button class="btn btn-danger" @onclick="(() => confirmDelete = true)">
                            Delete Order
                        </button>
                    } 
                </td>
            </tr> *@
        </tbody>
    </table>
    @* <EditForm Model="@updateModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary Model="@updateModel" />
           
       <div class="form-group">
            <label class="control-label" >Name for the Order</label>
            <InputText @bind-Value="updateModel.OrderName" class="form-control"/>
            <ValidationMessage For="@(()=> updateModel.OrderName)" class="text-danger"/>
       </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Update Order Name"/>
        </div>
    </EditForm> *@
}

@code {
    [Parameter]
    public int Id { get; set; }
    private OrderResultModel orderInfo = new OrderResultModel();
    private string errorString; 

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        HttpResponseMessage response = await Http.GetAsync($"api/order/{Id}");
        
        if (response.IsSuccessStatusCode)
        {
            orderInfo= await response.Content.ReadFromJsonAsync<OrderResultModel>();    
        }else
        {
            errorString = response.ReasonPhrase;
        }
    }
}
